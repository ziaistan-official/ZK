name: Fast APK Builder
on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: false
        default: 'release'
        type: choice
        options:
          - release
          - debug

jobs:
  build-apk:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      - name: 🔧 Configure Gradle for Maximum Performance
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties << 'EOF'
          org.gradle.parallel=true
          org.gradle.workers.max=4
          org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC
          org.gradle.caching=true
          org.gradle.configuration-cache=true
          org.gradle.daemon=false
          kotlin.incremental=true
          kotlin.compiler.execution.strategy=in-process
          kotlin.parallel.tasks.in.project=true
          android.enableJetifier=true
          android.useAndroidX=true
          android.enableR8.fullMode=true
          android.defaults.buildfeatures.buildconfig=true
          android.nonTransitiveRClass=true
          android.nonFinalResIds=true
          EOF
          
          echo "✅ Configured Gradle with 4 parallel workers"
          echo "💾 Available memory: $(free -h | awk '/^Mem:/ {print $2}')"
          echo "🔥 CPU cores: $(nproc)"
      
      - name: 🔑 Generate Release Keystore
        run: |
          keytool -genkeypair \
            -dname "CN=GitHub Actions CI, OU=Android Build, O=Automated, L=Cloud, ST=Virtual, C=US" \
            -keystore release.keystore \
            -alias release-key \
            -storepass github_actions_2024 \
            -keypass github_actions_2024 \
            -keyalg RSA \
            -keysize 2048 \
            -validity 1
          
          echo "✅ Keystore generated"
      
      - name: 🔐 Setup Gradle Properties
        run: |
          cat > gradle.properties << 'EOF'
          RELEASE_KEYSTORE=release.keystore
          RELEASE_KEYSTORE_PASSWORD=github_actions_2024
          RELEASE_KEY_ALIAS=release-key
          RELEASE_KEY_PASSWORD=github_actions_2024
          EOF
      
      - name: 📝 Make Gradlew Executable
        run: chmod +x ./gradlew
      
      - name: 🚀 Build APK with Parallel Processing
        run: |
          echo "🔨 Starting parallel build..."
          
          ./gradlew assembleRelease \
            --parallel \
            --max-workers=4 \
            --build-cache \
            --configuration-cache \
            --stacktrace \
            --info
        env:
          GRADLE_OPTS: "-Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4 -Xmx4096m -XX:+UseParallelGC"
          JAVA_OPTS: "-Xmx4096m"
      
      - name: 📦 Find APK Files
        id: find-apk
        run: |
          echo "🔍 Searching for APK files..."
          find . -name "*.apk" -type f
          
          APK_PATH=$(find . -name "*.apk" -path "*/release/*" -type f | head -n 1)
          
          if [ -z "$APK_PATH" ]; then
            echo "❌ No APK found!"
            exit 1
          fi
          
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "✅ Found APK: $APK_PATH"
          
          # Get APK size
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "📊 APK Size: $APK_SIZE"
      
      - name: ⬆️ Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ github.run_number }}-${{ github.sha }}
          path: ${{ steps.find-apk.outputs.apk_path }}
          retention-days: 30
          compression-level: 0
          if-no-files-found: error
      
      - name: 📊 Build Summary
        run: |
          echo "### ✅ Build Completed Successfully! 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Run Number:** #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **APK Location:** \`${{ steps.find-apk.outputs.apk_path }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Workers Used:** 4 parallel threads" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📥 Download your APK from the Artifacts section above!" >> $GITHUB_STEP_SUMMARY
